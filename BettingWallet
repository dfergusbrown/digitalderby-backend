class BettingWallet {
  private balance: number;

  constructor(initialBalance: number) {
    this.balance = initialBalance;
  }

  public getBalance(): number {
    return this.balance;
  }

  public placeBet(amount: number): boolean {
    if (amount > this.balance) {
      console.log("Insufficient funds to place bet.");
      return false;
    } else {
      this.balance -= amount;
      console.log(
        `Bet placed for $${amount}. Remaining balance: $${this.balance}.`
      );
      return true;
    }
  }

  public addWinnings(amount: number): void {
    this.balance += amount;
    console.log(`Winnings added: $${amount}. New balance: $${this.balance}.`);
  }
}

// Example usage:
let myWallet = new BettingWallet(100); // Starting with $100
myWallet.placeBet(50); // Trying to bet $50
myWallet.addWinnings(75); // Adding winnings of $75
console.log(`Final balance: $${myWallet.getBalance()}`); // Display final balance
